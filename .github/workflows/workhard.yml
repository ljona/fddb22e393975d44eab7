name: <h1>Test XSS</h1>

on: [ push ]

concurrency:
  # seems to be a safe usage
  group: ${{ github.ref }}
  cancel-in-progress: true


jobs:
  job1:
    runs-on: self-hosted
    outputs:
        key: ""
    steps:
      - name: job1steps
        env:
            TOKEN: SECRET_TOKEN
            MY_VAR: "${{ github.event.head_commit.message }}"
            X::SOMETHING
        #   KEY: "value set in yaml file"
        #   ${{ github.ref }}: "github ref value"
        #   KEY_VALUE_EXP: ${{ github.ref }}
        #   _GITHUB_ACTION_TOKEN: ${{ secrets._GITHUB_ACTION_TOKEN }}
        # working-directory: /usr/bin$(touch${IFS}$HOME/should_not_be_here)
        run: |
            echo "::stop-commands::$TOKEN"
            env
            echo "$MY_VAR"
            echo "::warning::do i work?"

            echo "::$TOKEN::"
            echo "::warning::do i work?"
            echo "$SOMETHING"
            # echo "::stop-commands::$TOKEN"
            # docker run --rm alpine:latest /bin/sh -c 'env'
            # echo "::$TOKEN::"

            #echo "::warning:: nothign is stopped"
            #echo "stopping now"
            #echo "::stop-commands::thing"
            #echo "::warning:: a 'thing' stopped it"
            #echo "masking cat when commmands are stopped"
            #echo "::add-mask::Mona The Octocat"
            ## echo "${{ github.event.head_commit.message }}"
            ##
            #echo "::warning:: a 'thing' resumed it"
            #echo "resuming commands"
            #echo "::thing::"

            #echo "::warning:: everything should be resumed"
            #echo "::add-mask::Mona The Octocat"

            #echo ::stop-commands:: whitespace
            #echo "::warning:: do I work?"
            #echo "::whitespace::"
            #echo "::warning:: do I work?"
            #echo ":: whitespace::"
            #echo "::warning:: do I work?"

            
            # cannot be resumed most probably
            # echo "stopping without a token"
            # echo "::stop-commands::"
            # echo "::warning:: everything stopped"
            # echo "masking now"
            # echo "::add-mask::Mona The Octocat"
            # echo "attempting to resume"
            # echo "::\"\"::"
            # echo "::::"
            # echo "::warning:: are we resumed?"


            echo "the fin"


            # echo "value of KEY is: $KEY"
            # echo "ending group"
            # echo "##[endgroup]"
            # echo "group ended"
            # echo "value of ${{ github.ref }}: $${{github.ref}}"
            # echo "value of KEY_VALUE_EXP: $KEY_VALUE_EXP"
            # # echo "##[set-env name=SOME_KEY]SOME_VALUE"
            # # echo "$SOME_VALUE"
            # # # echo "::set-something name=key::{\"a key\":\"a value\"}"
            # # echo "password=\"visible-password"
            # # echo "token=**password-removed**visible-password"
            # # echo "token=**password-removed**\"visible-password"
            # # echo "token=**password-removed**'visible-password"
            # # echo "token=**password-removed**;visible-password"
            # # echo "token=**password-removed**\" visible-password"
            # # echo "token=**password-removed**' visible-password"
            # # echo "token=**password-removed**; visible-password"
            # # echo "$REPO_SECRET"
            # echo "_GITHUB_ACTION_TOKEN: $_GITHUB_ACTION_TOKEN"
            # if [[ "$_GITHUB_ACTION_TOKEN" = "xxx" ]]; then
            #     echo "yay"
            # else
            #     echo "noo"
            # fi
  # job2:
  #     needs: job1
  #     runs-on: ubuntu-18.04
  #     steps:
  #       - name: job2steps
  #         run: |
  #             echo "${{needs.job1.outputs.key}}"

  # script:
  #   runs-on: ubuntu-18.04
  #   env:
  #       SUPERSECRET: ${{ secrets.SUPERSECRET }}
  #       REPO_SECRET: ${{ secrets.REPO_SECRET }}
  #   #   QUOTED: "${{ github.event.head_commit.message }}"
  #   #   UNQUOTED: ${{ github.event.head_commit.message }}
  #   steps:
  #     - name: first step
  #       # if: ${{ *() }}
  #       run: |
  #         # bash --version
  #         # echo "QUOTED: $QUOTED"
  #         # echo "UNQUOTED: $UNQUOTED"
  #         # echo
  #         echo "$SUPERSECRET"
  #         echo "$REPO_SECRET"
  #         echo "${{ secrets.REPO_SECRET }}"
  #         echo "ls \$HOME"
  #         ls $HOME
  #         echo
  #         echo "show env:"
  #         env
  #           # echo "Let me use github.ref in this innocently looking echo statement"
  #           # echo "${{ github.ref }}" 
  #           # echo "setting variable"
  #           # echo "action_state=${{ github.ref }}" >> $GITHUB_ENV
  #     # - name: second step
  #     #   run: |
  #     #       echo "ls \$HOME"
  #     #       ls $HOME
